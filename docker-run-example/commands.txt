1. Создать и запустить конетйнер на основе готового образа локально или из docker hub (поднять контейнер):

docker run postgres:6.10 - просто заблокируем консоль (postgres - это мы указали сам образ, через двоеточие указали версию, можно просто 'latest',
однао, если не указать версию - то будет браться по умолчанию последняя версия)

флаг: '-d' позволяет запустить контейнер в фоновом режиме: docker run -d postgres
Лучше давать имя контейнеру - иначе, ему выдадут рандомное имя: '--name' : docker run --name local_postgres -d postgres 
('name' мы указываем до того, как мы указываем 'image' - образ) 

передаем переменные окружения, некоорую конфигурацию, в случае postgres - это 'user' и 'pasword' обязательно через флаг '-e':
-e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres

проброс портов: -p 5432:5432 - это дефолтный порт для postgres

итоговая команда: docker run --name local_postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres
в консоли увидим полное id контейнера: 083434221c73439fcde02857a810ec0155ceb6ebfa9aed5cf229a92015851726

1.1 Создание и запуск конетйнера с начальной инициализацией БД:

2. Проверить, запустился ли контейнер: (то образом был запущен docker в конетйнере)

docker ps

либо через docker desktop

3. Остановка контейнера: docker stop и имя конетйнера

docker stop local_postgres (заходим в docker - там должна появиться новая запись)
подключиться к нему в это время нельзя

4. Повторный запуск контейнера: (запускать можно через докер декстоп, но через терминал удобнее), но уже не через docker run:

docker start local_postgres

5. Удаление контейнера (доп. тома (volumes) и образ (image)) - удалится только стандартный 'volume' контейнера, если установили доп. 'volume' - 
то образ не удалится (volume надо чистить). Если мы удалили контейнер с postgres - то это не значит, что image postgres удалился

docker rm local_postgres
